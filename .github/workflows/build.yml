name: Patched YTDL

on:
  push:
    branches:
      - master
    workflow_dispatch:
      inputs: {}

env:
  python_version: 3.8
  windows_icon: red

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      latest_version: ${{ steps.prepare.outputs.latest_version }}
      latest_version_numeric: ${{ steps.prepare.outputs.latest_version_numeric }}
    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        run: |
          sudo ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime
          sudo apt update
          sudo env DEBIAN_FRONTEND=noninteractive apt install -y tzdata
      - name: Prepare files
        id: prepare
        run: |
          mkdir artifacts
          export LATEST_VERSION="$(date)"
          echo "${LATEST_VERSION}" > artifacts/LATEST_VERSION
          echo "::set-output name=latest_version::${LATEST_VERSION}"
          echo "::set-output name=latest_version_numeric::$(date --date="${LATEST_VERSION}" +'%s')"

          echo "from __future__ import unicode_literals
          __version__ = '${LATEST_VERSION}'
          " > youtube_dl/version.py
      - name: Upload artifacts for the next steps
        uses: actions/upload-artifact@v2
        with:
          name: ytdl-base
          path: |
            youtube_dl/version.py
            artifacts/
  build-linux:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v2
      - name: Download base
        uses: actions/download-artifact@v2
        with:
          name: ytdl-base
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.python_version }}
      - name: Install deps
        run: |
          sudo ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime
          sudo apt update
          sudo env DEBIAN_FRONTEND=noninteractive apt install -y curl zip make git gawk pandoc tzdata
      - name: Build patched YTDL for Linux
        run: |
          make youtube-dl youtube-dl.tar.gz
          mv youtube-dl artifacts/
          mv youtube-dl.tar.gz artifacts/
      - name: Upload artifacts for the next steps
        uses: actions/upload-artifact@v2
        with:
          name: ytdl-linux
          # README.md (or any other files in the repo) is required
          # to prevent upload-artifacts to find LCA
          path: |
            artifacts/
            README.md
  build-windows:
    runs-on: windows-latest
    needs: prepare
    strategy:
      matrix:
        icon: [red, white]
    steps:
      - uses: actions/checkout@v2
      - name: Download base
        uses: actions/download-artifact@v2
        with:
          name: ytdl-base
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.python_version }}
      - name: Install deps
        run: |
          pip install --upgrade pyinstaller
      - name: Build patched YTDL for Windows
        run: |
          python -m PyInstaller `
              --onefile --console --distpath . `
              --hidden-import codecs `
              --icon icons\youtube_social_squircle_${{ matrix.icon }}.ico `
              -n youtube-dl youtube_dl\__main__.py
          Move-Item youtube-dl.exe artifacts/
      - name: Upload artifacts for the next steps
        uses: actions/upload-artifact@v2
        with:
          name: ytdl-windows-${{ matrix.icon }}
          # README.md (or any other files in the repo) is required
          # to prevent upload-artifacts to find LCA
          path: |
            artifacts/
            README.md
  prepare-artifacts:
    runs-on: ubuntu-latest
    needs: [prepare, build-linux, build-windows]
    outputs:
      filehash_bin: ${{ steps.hash-and-versions.outputs.filehash_bin }}
      filehash_exe: ${{ steps.hash-and-versions.outputs.filehash_exe }}
      filehash_tar: ${{ steps.hash-and-versions.outputs.filehash_tar }}
    steps:
      - name: Download builds for Linux
        uses: actions/download-artifact@v2
        with:
          name: ytdl-linux
      - name: Download builds for Windows
        uses: actions/download-artifact@v2
        with:
          name: ytdl-windows-${{ env.windows_icon }}
      - name: Install deps
        run: |
          sudo apt update
          sudo env DEBIAN_FRONTEND=noninteractive apt install -y jq
      - name: Prepare artifacts
        id: hash-and-versions
        run: |
          FILEHASH_BIN="$(sha256sum artifacts/youtube-dl        | awk '{print $1}')"
          FILEHASH_TAR="$(sha256sum artifacts/youtube-dl.tar.gz | awk '{print $1}')"
          FILEHASH_EXE="$(sha256sum artifacts/youtube-dl.exe    | awk '{print $1}')"
          echo "::set-output name=filehash_bin::${FILEHASH_BIN}"
          echo "::set-output name=filehash_tar::${FILEHASH_TAR}"
          echo "::set-output name=filehash_exe::${FILEHASH_EXE}"
          echo '{"versions":{}}' | jq ".latest=\"${{ needs.prepare.outputs.latest_version }}\"" \
            | jq ".versions[\"${{ needs.prepare.outputs.latest_version }}\"].bin=[\"https://github.com/nao20010128nao/ytdl-patched/releases/download/${{ needs.prepare.outputs.latest_version_numeric }}/youtube-dl\",\"${FILEHASH_BIN}\"]" \
            | jq ".versions[\"${{ needs.prepare.outputs.latest_version }}\"].tar=[\"https://github.com/nao20010128nao/ytdl-patched/releases/download/${{ needs.prepare.outputs.latest_version_numeric }}/youtube-dl.tar.gz\",\"${FILEHASH_TAR}\"]" \
            | jq ".versions[\"${{ needs.prepare.outputs.latest_version }}\"].exe=[\"https://github.com/nao20010128nao/ytdl-patched/releases/download/${{ needs.prepare.outputs.latest_version_numeric }}/youtube-dl.exe\",\"${FILEHASH_EXE}\"]" \
            | tee artifacts/versions.json
      - name: Upload artifacts for the next steps
        uses: actions/upload-artifact@v2
        with:
          name: ytdl-artifacts
          # README.md (or any other files in the repo) is required
          # to prevent upload-artifacts to find LCA
          path: |
            artifacts/
            README.md
  upload-gh-pages:
    needs: prepare-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ytdl-artifacts
      - name: Deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: artifacts
  upload-homebrew:
    needs: [prepare, prepare-artifacts]
    runs-on: ubuntu-latest
    env:
      FILEHASH_TAR: ${{ needs.prepare-artifacts.outputs.filehash_tar }}
      VERSION: ${{ needs.prepare.outputs.latest_version_numeric }}
    steps:
      - name: Upload to my homebrew repository
        run: |
          git config --global user.name nao20010128nao
          git config --global user.email nao20010128@gmail.com
          git clone https://nao20010128nao:${{ secrets.GH_PAT }}@github.com/nao20010128nao/homebrew-my.git
          cd homebrew-my
          echo $FILEHASH_TAR $VERSION
          sed -E -i "s/sha256 \"[0-9a-f]*\"/sha256 \"$FILEHASH_TAR\"/g" Formula/ytdl-patched.rb
          sed -E -i "s/version \".*\"/version \"$VERSION\"/g" Formula/ytdl-patched.rb
          git add .
          git commit -m "ytdl-patched: $VERSION"
          git push
  upload-releases:
    needs: [prepare, prepare-artifacts]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ytdl-artifacts
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.prepare.outputs.latest_version_numeric }}
          release_name: ${{ needs.prepare.outputs.latest_version }}
          draft: false
          prerelease: false
      - name: Upload bin
        id: upload-1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./artifacts/youtube-dl
          asset_name: youtube-dl
          asset_content_type: application/zip
      - name: Upload tar
        id: upload-2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./artifacts/youtube-dl.tar.gz
          asset_name: youtube-dl.tar.gz
          asset_content_type: application/gzip
      - name: Download builds for Windows (red icon)
        uses: actions/download-artifact@v2
        with:
          name: ytdl-windows-red
      - name: Upload exe
        id: upload-3
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./artifacts/youtube-dl.exe
          asset_name: youtube-dl-red.exe
          asset_content_type: application/vnd.microsoft.portable-executable
      - name: Download builds for Windows (white icon)
        uses: actions/download-artifact@v2
        with:
          name: ytdl-windows-white
      - name: Upload exe
        id: upload-4
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./artifacts/youtube-dl.exe
          asset_name: youtube-dl-white.exe
          asset_content_type: application/vnd.microsoft.portable-executable
  windows-test:
    needs: build-windows
    runs-on: windows-${{ matrix.windows }}
    continue-on-error: true
    strategy:
      matrix:
        windows: [2016, 2019]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ytdl-windows-white
      - name: youtube-dl --help and --version
        run: |
          .\artifacts\youtube-dl.exe --help
          .\artifacts\youtube-dl.exe --version
      - name: Download some videos
        continue-on-error: true
        run: |
          .\artifacts\youtube-dl.exe `
              https://www.youtube.com/watch?v=XEY7UQJxw-o `
              https://twitter.com/twetchapp/status/1311686520793829376
  ubuntu-mac-test:
    needs: build-linux
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [
          "ubuntu-20.04", "ubuntu-18.04", "ubuntu-16.04",
          "macos-latest"
        ]
        python_version: [
          "3.8", "3.7", "3.6", "3.5"
        ]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ytdl-linux
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python_version }}
      - name: youtube-dl --help and --version
        run: |
          chmod a+x ./artifacts/youtube-dl
          ./artifacts/youtube-dl --help
          ./artifacts/youtube-dl --version
      - name: Download some videos
        continue-on-error: true
        run: |
          ./artifacts/youtube-dl \
              https://www.youtube.com/watch?v=XEY7UQJxw-o \
              https://twitter.com/twetchapp/status/1311686520793829376
